"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/not-found",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHeroImages: function() { return /* binding */ getHeroImages; },\n/* harmony export */   getPage: function() { return /* binding */ getPage; },\n/* harmony export */   getPages: function() { return /* binding */ getPages; },\n/* harmony export */   getProject: function() { return /* binding */ getProject; },\n/* harmony export */   getProjects: function() { return /* binding */ getProjects; }\n/* harmony export */ });\n// Client-side API functions that call our Next.js API routes\nconst getProjects = async ()=>{\n    const response = await fetch(\"/api/contentful/projects\");\n    if (!response.ok) {\n        throw new Error(\"Failed to fetch projects\");\n    }\n    return response.json();\n};\nconst getProject = async (slug)=>{\n    const response = await fetch(\"/api/contentful/projects/\".concat(slug));\n    if (response.status === 404) {\n        return null;\n    }\n    if (!response.ok) {\n        throw new Error(\"Failed to fetch project\");\n    }\n    return response.json();\n};\nconst getPages = async ()=>{\n    const response = await fetch(\"/api/contentful/pages\");\n    if (!response.ok) {\n        throw new Error(\"Failed to fetch pages\");\n    }\n    return response.json();\n};\nconst getPage = async (slug)=>{\n    const response = await fetch(\"/api/contentful/pages/\".concat(slug));\n    if (response.status === 404) {\n        return null;\n    }\n    if (!response.ok) {\n        throw new Error(\"Failed to fetch page\");\n    }\n    return response.json();\n};\nconst getHeroImages = async ()=>{\n    const response = await fetch(\"/api/contentful/hero-images\");\n    if (!response.ok) {\n        throw new Error(\"Failed to fetch hero images\");\n    }\n    return response.json();\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsNkRBQTZEO0FBT3RELE1BQU1BLGNBQWM7SUFDekIsTUFBTUMsV0FBVyxNQUFNQyxNQUFNO0lBQzdCLElBQUksQ0FBQ0QsU0FBU0UsRUFBRSxFQUFFO1FBQ2hCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE9BQU9ILFNBQVNJLElBQUk7QUFDdEIsRUFBQztBQUVNLE1BQU1DLGFBQWEsT0FBT0M7SUFDL0IsTUFBTU4sV0FBVyxNQUFNQyxNQUFNLDRCQUFpQyxPQUFMSztJQUN6RCxJQUFJTixTQUFTTyxNQUFNLEtBQUssS0FBSztRQUMzQixPQUFPO0lBQ1Q7SUFDQSxJQUFJLENBQUNQLFNBQVNFLEVBQUUsRUFBRTtRQUNoQixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFDQSxPQUFPSCxTQUFTSSxJQUFJO0FBQ3RCLEVBQUM7QUFFTSxNQUFNSSxXQUFXO0lBQ3RCLE1BQU1SLFdBQVcsTUFBTUMsTUFBTTtJQUM3QixJQUFJLENBQUNELFNBQVNFLEVBQUUsRUFBRTtRQUNoQixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFDQSxPQUFPSCxTQUFTSSxJQUFJO0FBQ3RCLEVBQUM7QUFFTSxNQUFNSyxVQUFVLE9BQU9IO0lBQzVCLE1BQU1OLFdBQVcsTUFBTUMsTUFBTSx5QkFBOEIsT0FBTEs7SUFDdEQsSUFBSU4sU0FBU08sTUFBTSxLQUFLLEtBQUs7UUFDM0IsT0FBTztJQUNUO0lBQ0EsSUFBSSxDQUFDUCxTQUFTRSxFQUFFLEVBQUU7UUFDaEIsTUFBTSxJQUFJQyxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0gsU0FBU0ksSUFBSTtBQUN0QixFQUFDO0FBRU0sTUFBTU0sZ0JBQWdCO0lBQzNCLE1BQU1WLFdBQVcsTUFBTUMsTUFBTTtJQUM3QixJQUFJLENBQUNELFNBQVNFLEVBQUUsRUFBRTtRQUNoQixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFDQSxPQUFPSCxTQUFTSSxJQUFJO0FBQ3RCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9hcGkudHM/MmZhYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDbGllbnQtc2lkZSBBUEkgZnVuY3Rpb25zIHRoYXQgY2FsbCBvdXIgTmV4dC5qcyBBUEkgcm91dGVzXG5pbXBvcnQgeyBcbiAgQ29udGVudGZ1bFByb2plY3QsIFxuICBDb250ZW50ZnVsUGFnZSwgXG4gIENvbnRlbnRmdWxIZXJvSW1hZ2UgXG59IGZyb20gJ0AvdHlwZXMvY29udGVudGZ1bCdcblxuZXhwb3J0IGNvbnN0IGdldFByb2plY3RzID0gYXN5bmMgKCk6IFByb21pc2U8Q29udGVudGZ1bFByb2plY3RbXT4gPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2NvbnRlbnRmdWwvcHJvamVjdHMnKVxuICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggcHJvamVjdHMnKVxuICB9XG4gIHJldHVybiByZXNwb25zZS5qc29uKClcbn1cblxuZXhwb3J0IGNvbnN0IGdldFByb2plY3QgPSBhc3luYyAoc2x1Zzogc3RyaW5nKTogUHJvbWlzZTxDb250ZW50ZnVsUHJvamVjdCB8IG51bGw+ID0+IHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9jb250ZW50ZnVsL3Byb2plY3RzLyR7c2x1Z31gKVxuICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDQpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBwcm9qZWN0JylcbiAgfVxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpXG59XG5cbmV4cG9ydCBjb25zdCBnZXRQYWdlcyA9IGFzeW5jICgpOiBQcm9taXNlPENvbnRlbnRmdWxQYWdlW10+ID0+IHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9jb250ZW50ZnVsL3BhZ2VzJylcbiAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIHBhZ2VzJylcbiAgfVxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpXG59XG5cbmV4cG9ydCBjb25zdCBnZXRQYWdlID0gYXN5bmMgKHNsdWc6IHN0cmluZyk6IFByb21pc2U8Q29udGVudGZ1bFBhZ2UgfCBudWxsPiA9PiB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvY29udGVudGZ1bC9wYWdlcy8ke3NsdWd9YClcbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggcGFnZScpXG4gIH1cbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxufVxuXG5leHBvcnQgY29uc3QgZ2V0SGVyb0ltYWdlcyA9IGFzeW5jICgpOiBQcm9taXNlPENvbnRlbnRmdWxIZXJvSW1hZ2VbXT4gPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2NvbnRlbnRmdWwvaGVyby1pbWFnZXMnKVxuICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggaGVybyBpbWFnZXMnKVxuICB9XG4gIHJldHVybiByZXNwb25zZS5qc29uKClcbn0iXSwibmFtZXMiOlsiZ2V0UHJvamVjdHMiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsImpzb24iLCJnZXRQcm9qZWN0Iiwic2x1ZyIsInN0YXR1cyIsImdldFBhZ2VzIiwiZ2V0UGFnZSIsImdldEhlcm9JbWFnZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});